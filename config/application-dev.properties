server.port=10335
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.database=MYSQL
spring.datasource.url=jdbc:mysql://localhost:3306/data_dealer?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai

spring.datasource.username=root
spring.datasource.password=


spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=false
spring.datasource.filters=config,stat
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrpt=true;
spring.datasource.logSlowSql=true


###############Database Info ##########################
#service.restfulUrl=http://polaris1.ont.io:20334
service.restfulUrl=http://172.168.3.81:20334
###############mybatis ##########################
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapper-locations=classpath:/mapper/*Mapper.xml
mybatis.type-aliases-package=com.ontology.dao

###############rsa ##########################
rsa.publicKey=TUlHZk1BMEdDU3FHU0liM0RRRUJBUVVBQTRHTkFEQ0JpUUtCZ1FDZHlOakVpekVQdzdjdWRsL3dZMlVGZzlnaE5qL2pSMDRpQzhIM1crU1dML0dNQ25Pei85WERmQzN1ODRUdnQxS2dGcVdJWkl3a2dOSmxNVFhIZWRTWElNWDkxalUwbUdJSGlVY21SbWdyNTZKYjFCNUMxM3REK1VUQTRpaTYzV0ttRCtBRXZ4ZWp4U3BodXlaMk1JTGxOcUlJdUw3MWdrbFNrWWtUYlhzWEdRSURBUUFC

rsa.privateKey=TUlJQ2R3SUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NBbUV3Z2dKZEFnRUFBb0dCQUozSTJNU0xNUS9EdHk1MlgvQmpaUVdEMkNFMlArTkhUaUlMd2ZkYjVKWXY4WXdLYzdQLzFjTjhMZTd6aE8rM1VxQVdwWWhrakNTQTBtVXhOY2Q1MUpjZ3hmM1dOVFNZWWdlSlJ5WkdhQ3Zub2x2VUhrTFhlMFA1Uk1EaUtMcmRZcVlQNEFTL0Y2UEZLbUc3Sm5Zd2d1VTJvZ2k0dnZXQ1NWS1JpUk50ZXhjWkFnTUJBQUVDZ1lCRW15QWwxWi92aXRvTGljME5hU3B6eTNBZWdNZ211c3B1WTA1amo4RkV6SFBxd0dDdTAzN1BFUituMXBybTRIODh2SndkUWhydGhGWDNTZjVvVGNEeGhrK3IrYVRORkx4MjhQWWFHV0JCQjhHMTRUZHdGcFFGa0hDdnl1MlZsNU5BY3c2em42MGVLcExJNVJjZkJZTTVyNHg1azMyNWFYMVlZOG1KTGlCWFFRSkJBTmNraWlobS8rVkd1d3hDRjVKK1VSanYySnNwaEp2MVFyY3hUR2RGZ3U5Z3ZtdWM1cTR3NWxGdHBzVWZDd1VveVhMQXdscFdDenNmdTRyTlYyckgyQXNDUVFDN3Y4S201aVppUFVLWDdQUWRuTnhSQzExa2lIN2NlWWpEckQ5NnhIUWNOa3d6M1pQTm4rVlhzeEdRc1VnZ2pTU203dGtnaVVqTE1zVzdRTGg5OFcvckFrRUFrVnVQdU9KMmJIdFFiMlRNTmw3Ly9nQTI4Z2FvSVJNaFkxSjhrNTNFYkdXSjRuMWM0ajRKcnVTTjg4c1lrQURSc3FXSDZxOE40WUY4SGJqRklsRXBwd0pCQUkrOERneHlORDZQZ2JVSDdoZmhwL1hQeW84VnhIR01CYjB2MkdWbmt6Q3FEUXJEL3N5ME5nTS9EeHFEN3FFbERVTlRwaHkzbldnYkZhLzJxNGVYMkVNQ1FGZUNnT0VabFZGQisxOU1DSkVOQ3RZQk1wQWp6OTQzYWpGQlcwT3BKdjNpRlhWcjFCa1h2U1BmQkJ4WFJiaVorZG40c0IxNFAvS05YK2VmeWI0eS9lZz0=

aes.iv=Njg4OWY4OTJhMTdlNDM3MQ==
aes.key=U2hlbnlpbiZaaG91cWlhbmcmMjAwOA==

test.token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0ZW1wIjoidGVtcCIsImN1cnJlbnRUaW1lTWlsbGlzIjoiMTU0ODI0NzUyNjE5MiIsImV4cCI6MTU0ODI0NzUyNywiZW1haWwiOiJ6aG91cWlhbmdAb250LmlvIn0.vFF7Y2bSYd26Cx_zXvadWsn_hqqnR-146rkcSzR6ImM
wallet.goPublicKey=MDMzN2I1ODYwM2YzN2U4OWFhNjA4M2NmOTQ4OTFhYzgyNmY2ZjBjYWU3ZGYxMTk4NTkzNDc0NWVjMGM4MTk0MzRk
wallet.javaPrivateKey=OTUyNGI5ZWIxYmRiOGVmYTY4YjhmMDVjYTE4OTNjZjYwZjVkODYyYWQwNjM0M2I0MzllMTNlMDQzNmI4NTdmOA==

contract.hash.ons=b611ab478682f1b117a8be00f874692a5fba8d8f
contract.hash.dtoken=3e7d3d82df5e1f951610ffa605af76846802fbae
contract.hash.mp.auth=f261464e2cd21c2ab9c06fa3e627ce03c7715ec9
contract.hash.mp=7c2b06ae3e70a470d01ac5ce63017d18b88e08b7
payer.addr=ARCESVnP8Lbf6S7FuTei3smA35EQYog4LR
payer.wif=TDFmWG5vTXI1Mm9yYVc0NG42d3hMRHk2QnBwY01HUzZNdUs3c29MVHBkRlprS0hoemI4bg==


#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=0.0.0.0:9092

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=group-ddxf-insert

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.consumer.auto-commit-interval=1S

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#设置手动提交offset
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.concurrency=5
spring.kafka.consumer.max-poll-records=5

# Elasticsearch
elasticsearch.ip=0.0.0.0
elasticsearch.port=9300
elasticsearch.pool=5
elasticsearch.cluster.name=my-application
elasticsearch.sniff=false